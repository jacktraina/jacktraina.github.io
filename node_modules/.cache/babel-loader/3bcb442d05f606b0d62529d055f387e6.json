{"ast":null,"code":"var _jsxFileName = \"/Users/jacktraina/Documents/Website/blk-design/src/components/CustomUpload/ImageUpload.js\";\n\n/*!\n\n=========================================================\n* BLK Design System PRO React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/blk-design-system-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // used for making the prop types of this component\n\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      imagePreviewUrl: this.props.avatar ? defaultAvatar : defaultImage\n    };\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); // this.state.file is the file/image uploaded\n    // in this function you can save the image (this.state.file) on form submit\n    // you have to call it yourself\n  }\n\n  handleClick() {\n    this.refs.fileInput.click();\n  }\n\n  handleRemove() {\n    this.setState({\n      file: null,\n      imagePreviewUrl: this.props.avatar ? defaultAvatar : defaultImage\n    });\n    this.refs.fileInput.value = null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fileinput text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleImageChange,\n      ref: \"fileInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"thumbnail\" + (this.props.avatar ? \" img-circle\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imagePreviewUrl,\n      alt: \"...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, this.state.file === null ? /*#__PURE__*/React.createElement(Button, {\n      color: this.props.addBtnColor,\n      className: this.props.addBtnClasses,\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, this.props.avatar ? \"Add Photo\" : \"Select image\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: this.props.changeBtnColor,\n      className: this.props.changeBtnClasses,\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Change\"), this.props.avatar ? /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 36\n      }\n    }) : null, /*#__PURE__*/React.createElement(Button, {\n      color: this.props.removeBtnColor,\n      className: this.props.removeBtnClasses,\n      onClick: () => this.handleRemove(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), \" Remove\"))));\n  }\n\n}\n\nImageUpload.defaultProps = {\n  avatar: false,\n  removeBtnClasses: \"btn-round\",\n  removeBtnColor: \"danger\",\n  addBtnClasses: \"btn-round\",\n  addBtnColor: \"primary\",\n  changeBtnClasses: \"btn-round\",\n  changeBtnColor: \"primary\"\n};\nImageUpload.propTypes = {\n  avatar: PropTypes.bool,\n  removeBtnClasses: PropTypes.string,\n  removeBtnColor: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"info\", \"warning\", \"danger\", \"link\"]),\n  addBtnClasses: PropTypes.string,\n  addBtnColor: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"info\", \"warning\", \"danger\", \"link\"]),\n  changeBtnClasses: PropTypes.string,\n  changeBtnColor: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"info\", \"warning\", \"danger\", \"link\"])\n};\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/jacktraina/Documents/Website/blk-design/src/components/CustomUpload/ImageUpload.js"],"names":["React","PropTypes","Button","defaultImage","defaultAvatar","ImageUpload","Component","constructor","props","state","file","imagePreviewUrl","avatar","handleImageChange","bind","handleSubmit","handleClick","handleRemove","e","preventDefault","reader","FileReader","target","files","onloadend","setState","result","readAsDataURL","refs","fileInput","click","value","render","addBtnColor","addBtnClasses","changeBtnColor","changeBtnClasses","removeBtnColor","removeBtnClasses","defaultProps","propTypes","bool","string","oneOf"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* BLK Design System PRO React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/blk-design-system-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nimport { Button } from \"reactstrap\";\n\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      imagePreviewUrl: this.props.avatar ? defaultAvatar : defaultImage\n    };\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n  handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n    reader.readAsDataURL(file);\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    // this.state.file is the file/image uploaded\n    // in this function you can save the image (this.state.file) on form submit\n    // you have to call it yourself\n  }\n  handleClick() {\n    this.refs.fileInput.click();\n  }\n  handleRemove() {\n    this.setState({\n      file: null,\n      imagePreviewUrl: this.props.avatar ? defaultAvatar : defaultImage\n    });\n    this.refs.fileInput.value = null;\n  }\n  render() {\n    return (\n      <div className=\"fileinput text-center\">\n        <input type=\"file\" onChange={this.handleImageChange} ref=\"fileInput\" />\n        <div className={\"thumbnail\" + (this.props.avatar ? \" img-circle\" : \"\")}>\n          <img src={this.state.imagePreviewUrl} alt=\"...\" />\n        </div>\n        <div>\n          {this.state.file === null ? (\n            <Button\n              color={this.props.addBtnColor}\n              className={this.props.addBtnClasses}\n              onClick={() => this.handleClick()}\n            >\n              {this.props.avatar ? \"Add Photo\" : \"Select image\"}\n            </Button>\n          ) : (\n            <span>\n              <Button\n                color={this.props.changeBtnColor}\n                className={this.props.changeBtnClasses}\n                onClick={() => this.handleClick()}\n              >\n                Change\n              </Button>\n              {this.props.avatar ? <br /> : null}\n              <Button\n                color={this.props.removeBtnColor}\n                className={this.props.removeBtnClasses}\n                onClick={() => this.handleRemove()}\n              >\n                <i className=\"fa fa-times\" /> Remove\n              </Button>\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nImageUpload.defaultProps = {\n  avatar: false,\n  removeBtnClasses: \"btn-round\",\n  removeBtnColor: \"danger\",\n  addBtnClasses: \"btn-round\",\n  addBtnColor: \"primary\",\n  changeBtnClasses: \"btn-round\",\n  changeBtnColor: \"primary\"\n};\n\nImageUpload.propTypes = {\n  avatar: PropTypes.bool,\n  removeBtnClasses: PropTypes.string,\n  removeBtnColor: PropTypes.oneOf([\n    \"default\",\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"info\",\n    \"warning\",\n    \"danger\",\n    \"link\"\n  ]),\n  addBtnClasses: PropTypes.string,\n  addBtnColor: PropTypes.oneOf([\n    \"default\",\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"info\",\n    \"warning\",\n    \"danger\",\n    \"link\"\n  ]),\n  changeBtnClasses: PropTypes.string,\n  changeBtnColor: PropTypes.oneOf([\n    \"default\",\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"info\",\n    \"warning\",\n    \"danger\",\n    \"link\"\n  ])\n};\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}